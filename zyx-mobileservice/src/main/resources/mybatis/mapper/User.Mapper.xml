<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mobileservice.dao.impl.UserDaoImpl">

	<!-- 用户信息表 -->
	<sql id="user"> user </sql>

	<resultMap id="beanMap" type="User">
		<id column="id" property="id" />
		<id column="name" property="name" />
		<id column="nick" property="nick" />
		<id column="passWord" property="passWord" />
		<id column="phone" property="phone" />
		<id column="url" property="url" />
		<id column="address" property="address" />
		<id column="birthday" property="birthday" />
		<id column="registerTime" property="registerTime" />
		<id column="lastLoginTime" property="lastLoginTime" />
		<id column="idcard" property="idcard" />
		<id column="type" property="type" />
		<id column="sex" property="sex" />
		<id column="receiiptAddress" property="receiiptAddress" />
	</resultMap>
	
	<insert id="insert" parameterType="User" keyProperty="id" useGeneratedKeys="true">
		insert into <include refid="user"/>(name,nick,passWord,phone,url,address,birthday,registerTime,lastLoginTime,idcard,type,sex,receiiptAddress)
		values (#{name},#{nick},#{passWord},#{phone},#{url},#{address},#{birthday},#{registerTime},#{lastLoginTime},#{idcard},#{type},#{sex},#{receiiptAddress})
	</insert>
	
	<update id="update" parameterType="User">
		update <include refid="user"/>
		<set>			
				name=#{name},
                nick=#{nick},
				passWord=#{passWord},
				phone=#{phone},
				url=#{url},
				address=#{address},
				birthday=#{birthday},
				registerTime=#{registerTime},
				lastLoginTime=#{lastLoginTime},
				idcard=#{idcard},
				type=#{type},
				sex=#{sex},
				receiiptAddress=#{receiiptAddress}
		</set>
		<where>
			id = #{id} 
		</where>
	</update>
	
	
  	<select id="getById" parameterType="long" resultMap="beanMap">
    	select * from <include refid="user"/> where id = #{id}
  	</select>
  	
  	<select id="findByUserName" parameterType="string" resultMap="beanMap">
    	select * from <include refid="user"/> where name= #{name}
  	</select>
  	
  	<select id="listAll" resultMap="beanMap">
    	select * from <include refid="user"/> order by id
  	</select>
  	
  	<delete id="deleteById" parameterType="long">
    	delete from <include refid="user"/> where id = #{id}
  	</delete>

	<sql id="condition_sql">
		<!-- Equal query -->
		<!-- <if test="mainUserId != null and mainUserId != ''"> and main_user_id = #{mainUserId}</if>
		<if test="status != null and status != ''"> and status = #{status}</if>
		<if test="userNo != null and userNo != ''"> and user_no = #{userNo}</if> -->
		<!-- Like query -->
		<if test="name != null and name != ''"> and name like CONCAT(CONCAT('%', #{name}), '%')</if>
	</sql>
	
	<select id="listPage" parameterType="java.util.Map" resultMap="beanMap">
		select * from  
		<include refid="user"/>
		
		<where>
			<include refid="condition_sql" />
		</where>
		order by id desc 
		limit #{pageFirst} , #{pageSize} 
	</select>
	
	<select id="listPageCount" parameterType="java.util.Map" resultType="long">
		select count(1) from <include refid="user"/>
		<where>
			<include refid="condition_sql"/>
		</where>
	</select>
	
</mapper>