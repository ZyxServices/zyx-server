<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zyx.service.live.TextLiveItemService">

	<!-- 用户信息表 -->
	<sql id="textLiveItem"> t_live_item_text </sql>

	<resultMap id="textLiveItem" type="com.zyx.entity.live.TextLiveItem">
		<id column="id" property="id" />
		<id column="liveId" property="live_id" />
		<id column="createTime" property="create_time" />
		<id column="content" property="content" />
		<id column="imgUrl" property="img_url" />
	</resultMap>

	<insert id="TextLiveItem_add" parameterType="com.zyx.entity.live.TextLiveItem"
		keyProperty="id" useGeneratedKeys="true">
		insert into
		<include refid="textLiveItem" />
		(live_id,create_time,content,img_url)
		values
		(#{liveId},#{createTime},#{content},#{imgUrl})
	</insert>


	<!-- <update id="update" parameterType="User"> update <include refid="user"/> 
		<set> name=#{name}, nick=#{nick}, passWord=#{passWord}, phone=#{phone}, url=#{url}, 
		address=#{address}, birthday=#{birthday}, registerTime=#{registerTime}, lastLoginTime=#{lastLoginTime}, 
		idcard=#{idcard}, type=#{type}, sex=#{sex}, receiiptAddress=#{receiiptAddress} 
		</set> <where> id = #{id} </where> </update> <select id="getById" parameterType="long" 
		resultMap="beanMap"> select * from <include refid="user"/> where id = #{id} 
		</select> <select id="findByUserName" parameterType="string" resultMap="beanMap"> 
		select * from <include refid="user"/> where name= #{name} </select> <select 
		id="listAll" resultMap="beanMap"> select * from <include refid="user"/> order 
		by id </select> <delete id="deleteById" parameterType="long"> delete from 
		<include refid="user"/> where id = #{id} </delete> <sql id="condition_sql"> 
		Equal query <if test="mainUserId != null and mainUserId != ''"> and main_user_id 
		= #{mainUserId}</if> <if test="status != null and status != ''"> and status 
		= #{status}</if> <if test="userNo != null and userNo != ''"> and user_no 
		= #{userNo}</if> Like query <if test="name != null and name != ''"> and name 
		like CONCAT(CONCAT('%', #{name}), '%')</if> </sql> <select id="listPage" 
		parameterType="java.util.Map" resultMap="beanMap"> select * from <include 
		refid="user"/> <where> <include refid="condition_sql" /> </where> order by 
		id desc limit #{pageFirst} , #{pageSize} </select> <select id="listPageCount" 
		parameterType="java.util.Map" resultType="long"> select count(1) from <include 
		refid="user"/> <where> <include refid="condition_sql"/> </where> </select> -->

</mapper>