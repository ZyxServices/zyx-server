<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ The MIT License (MIT)
  ~
  ~ Copyright (c) 2014 abel533@gmail.com
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy
  ~ of this software and associated documentation files (the "Software"), to deal
  ~ in the Software without restriction, including without limitation the rights
  ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  ~ copies of the Software, and to permit persons to whom the Software is
  ~ furnished to do so, subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice shall be included in
  ~ all copies or substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  ~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  ~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  ~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  ~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  ~ THE SOFTWARE.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zyx.mapper.pg.CircleItemMapper">
    <resultMap id="CircleItemResultMap" type="com.zyx.entity.pg.CircleItem">
        <id column="Id" property="id" jdbcType="INTEGER"/>
        <result column="circle_id" property="circleId" jdbcType="INTEGER"/>
        <result column="create_id" property="createId" jdbcType="INTEGER"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="img_url" property="imgUrl" jdbcType="VARCHAR"/>
        <result column="hot" property="hot" jdbcType="VARCHAR"/>
        <result column="top" property="top" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="BIGINT"/>
    </resultMap>
    <resultMap id="CircleItemCustomMap" type="com.zyx.vo.pg.CircleItemVo" extends="CircleItemResultMap">
        <result column="nickname" property="nickname" jdbcType="VARCHAR"/>
        <result column="avatar" property="avatar" jdbcType="VARCHAR"/>
        <!--<result column="zanCount" property="zanCount" jdbcType="INTEGER"/>-->
        <!--<result column="meetCount" property="meetCount" jdbcType="INTEGER"/>-->
        <result column="circleTitle" property="circleTitle" jdbcType="VARCHAR"/>
        <association property="zanCount" column="circle_id" select="zanSelect"/>
        <association property="meetCount" column="circle_id" select="meetSelect"/>
    </resultMap>

    <resultMap id="CircleItemLunBoMap" type="com.zyx.vo.pg.CircleItemLunBoVo" extends="CircleItemResultMap">
        <association property="userVo" column="create_id" select="userVoSelect"/>
    </resultMap>

    <select id="userVoSelect" parameterType="int" resultType="com.zyx.vo.pg.UserVo">
        SELECT nickname,avatar,id,authenticate FROM `user` WHERE id=#{user_id}
    </select>
    <select id="meetSelect" parameterType="int" resultType="int">
        SELECT count(*) from meet where circle_id=#{circle_item_id}
    </select>

    <select id="zanSelect" parameterType="int" resultType="int">
        SELECT count(id) from zan where body_type=5 AND body_id=#{circle_item_id}
    </select>

    <select id="circleItemList" resultMap="CircleItemCustomMap">
        SELECT
        circle_item.id,
        circle_item.circle_id,
        circle_item.img_url,
        circle_item.create_id,
        circle_item.title,
        circle_item.content,
        circle_item.hot,
        circle_item.create_time,
        circle_item.top,
        circle_item.state,
        `user`.nickname,
        `user`.avatar,
        circle.title AS circleTitle
        FROM
        circle_item
        INNER JOIN `user` ON circle_item.create_id = `user`.id
        INNER JOIN circle ON circle_item.circle_id = circle.id
        WHERE
        <if test="circleId!=null">
            circle_item.circle_id=#{circleId}
            AND circle_item.state!=-1
        </if>
        <if test="circleId==null">
            circle_item.state!=-1
        </if>

        ORDER BY circle_item.create_time
        limit 0,#{max}
    </select>

    <update id="setTop">
        UPDATE circle_item SET top=#{top} WHERE id=#{circleItemId}
    </update>

    <select id="topList" resultMap="CircleItemResultMap">
        SELECT * FROM circle_item where circle_id=#{circleId} AND top!='null' ORDER BY create_time DESC,top DESC limit 0,#{max}
    </select>

    <select id="getCircleItemCounts" resultType="java.lang.Integer">
        SELECT COUNT(*) as circleItemCount FROM circle_item WHERE circle_id=#{circleId}
    </select>

    <select id="findById" resultMap="CircleItemResultMap">
        SELECT * FROM circle_item WHERE  id=#{circleItemId}
    </select>

    <update id="delByThisUser">
        UPDATE circle_item SET state=-1 WHERE create_id=#{createThisId} AND id=#{circleItemId}
    </update>

    <select id="getLunBo" resultMap="CircleItemLunBoMap">
          SELECT
            circle_item.id,
            circle_item.create_id,
            devaluation.image_url as tjImgae_url
        FROM
            devaluation
        INNER JOIN circle_item ON circle_item.id = devaluation.model_id
        WHERE devaluation.model=6 AND devaluation.area=2
        ORDER BY
            devaluation.sequence DESC
        LIMIT 0,#{max}
    </select>

    <select id="getOneCircleItem" resultMap="CircleItemLunBoMap">
        SELECT * FROM circle_item WHERE id=#{id}
    </select>

    <select id="getTjCircleItem" resultMap="CircleItemCustomMap">
        SELECT
        circle_item.id,
        circle_item.circle_id,
        circle_item.create_id,
        circle_item.title,
        circle_item.content,
        circle_item.hot,
        circle_item.create_time,
        circle_item.top,
        circle_item.state,
        `user`.nickname,
        `user`.avatar,
        circle.title as circleTitle,
        circle_item.img_url
        FROM
        circle_item
        INNER JOIN devaluation ON circle_item.id = devaluation.model_id
        INNER JOIN `user` ON circle_item.create_id = `user`.id
        INNER JOIN circle ON circle_item.circle_id = circle.id
        where model=6 and area=2
        LIMIT #{start},#{end}
    </select>

</mapper>